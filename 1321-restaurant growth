window function
SELECT 
visited_on, 
sum(amount) over (order by visited_on rows between 6 preceding and current row) as amount,
round(avg(amount) over (order by visited_on rows between 6 preceding and current row),2) as avg_amount
FROM (select visited_on, sum(amount) from customer group by visited_on) t
WHERE date_sub(visited_on, inteval 6 day) >= (SELECT min(visited) FROM customer)

subquery
with cte as
(SELECT visited_on, sum(amount) as amount
FROM customer_id
GROUP BY visited_on)

SELECT c1.visited_on, (select sum(amount) 
                    from customer c2
                    where datediff(c1.visited_on, c2.visited_on) <= 6
                      and c1.visited_on >= c2.visited_on) as amount,
                      round((select avg(amount) 
                    from cte c2
                    where datediff(c1.visited_on, c2.visited_on) <= 6
                      and c1.visited_on >= c2.visited_on),2) as avg_amount
                      ### datediff(c1.visited_on, c2.visited_on) between 0 and 6
                      ### datediff(c1.visited_on, c2.visited_on) >= 0
FROM cte c1
WHERE date_sub(visited_on, interval 6 day) >= (SELECT min(visited) FROM customer)

join
with cte as
(SELECT visited_on, sum(amount) as amount
FROM customer_id
GROUP BY visited_on)

SELECT c1.visited_on, sum(c2.amount), round(avg(c2.amount),2)
FROM cte c1 left join cte c2
  on c2.visited_on >= date_sub(c1.visited_on, interval 6 day) and c2.visited_on <= c1.visited_on
GROUP BY c1.visited_on
HAVING count(c2.visited_on) >= 7
order by c1.visited_on
